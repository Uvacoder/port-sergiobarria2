---
import type { MarkdownHeading } from 'astro';
import { format } from 'date-fns';
import { CalendarIcon, ClockIcon, EyeOpenIcon } from '@radix-ui/react-icons';

import BaseLayout from '~/layouts/BaseLayout.astro';
import { CloudinaryImage, ViewCounter } from '~/shared/components/jsx';
import type { PostFrontmatter } from '~/pages/blog/_utils';

interface Props {
	slug?: string;
	frontmatter: PostFrontmatter;
	headings: MarkdownHeading[];
}

const {
	frontmatter: { title, coverImage, summary, minutesRead, publishDate },
	slug,
	headings,
} = Astro.props as Props;
const formattedDate = format(new Date(publishDate), 'MMM dd, yyyy');
console.log('headings: ', headings);
---

<style lang="scss">
	@use 'src/styles/utils';
	.container {
		margin: var(--size-8) 0;

		hr {
			margin-block: var(--size-fluid-2);
		}
	}

	.post {
		&__header {
			& > h1 {
				text-align: center;
				max-inline-size: 100%;
				margin-bottom: var(--size-3);
				background: var(--text-gradient);
				-webkit-background-clip: text;
				-webkit-text-fill-color: transparent;
				border-radius: var(--radius-3);
				padding: var(--size-1);
			}
		}
		&__image {
			margin-bottom: var(--size-3);
		}

		&__summaryCard {
			background-color: var(--surface2);
			padding: var(--size-3);
			border-radius: var(--radius-3);
			margin-bottom: var(--size-3);

			&-excerpt {
				margin-bottom: var(--size-3);
				max-inline-size: 100%;

				&--title {
					color: var(--accent);
					font-weight: 600;
				}

				&--text {
					font-style: italic;
					font-family: serif;
				}
			}

			&-stats {
				display: flex;
				align-items: center;

				& > p {
					display: flex;
					align-items: center;
					gap: var(--size-2);
					color: var(--text-3);
					opacity: 0.7;
					font-size: var(--font-size-1);

					&:not(:last-child) {
						padding-right: var(--size-3);
						margin-right: var(--size-3);
						border-right: var(--border-size-1) solid var(--text-2);
					}
				}
			}
		}
	}

	.content {
		max-inline-size: var(--size-content-3);
	}

	.grid {
		@include utils.breakpoint-up('md') {
			display: grid;
			gap: var(--size-8);
			grid-template-columns: auto 350px;
		}
	}

	.toc {
		position: relative;
		padding: var(--size-3);

		@include utils.breakpoint-down('md') {
			display: none;
		}

		&__container {
			@include utils.position(sticky, 9rem, null, null, null);
		}

		h3 {
			margin-bottom: var(--size-3);
		}

		&__links {
			& > a {
				display: block;
				margin-bottom: var(--size-1);
				color: var(--text-3);
				opacity: 0.7;
				font-size: var(--font-size-1);
				transition: opacity 0.2s ease-in-out;

				&:hover {
					opacity: 1;
				}

				&:active {
					opacity: 1;
					font-weight: 600;
				}
			}
		}
	}
</style>

<BaseLayout>
	<div class="container">
		<section class="post">
			<div class="post__header">
				<h1>{title}</h1>
				<div class="post__image">
					<CloudinaryImage
						publicId={`sergiobarria/banners/${coverImage}`}
						alt={title}
						radius={20}
					/>
				</div>
			</div>
			<div class="post__summaryCard">
				<p class="post__summaryCard-excerpt">
					<span class="post__summaryCard-excerpt--title">Summary:</span>
					<span class="post__summaryCard-excerpt--text">â†¬ {summary}</span>
				</p>
				<div class="post__summaryCard-stats">
					<p>
						<CalendarIcon width={24} height={24} />
						<span>{formattedDate}</span>
					</p>
					<p>
						<ClockIcon width={24} height={24} />
						<span>{minutesRead}</span>
					</p>
					<p>
						<EyeOpenIcon width={24} height={24} />
						<ViewCounter client:load slug={slug as string} />
					</p>
				</div>
			</div>
		</section>
		<hr />
		<!-- Content -->
		<div class="grid">
			<article id="post-content" class="content">
				<slot />
			</article>
			<div class="toc">
				<div class="toc__container">
					<h3>Table of Contents</h3>
					<div class="toc__links">
						{headings.map((heading) => <a href={`#${heading.slug}`}>{heading.text}</a>)}
					</div>
				</div>
			</div>
		</div>
	</div>
</BaseLayout>
