---
import '@fontsource/lato';
import '@fontsource/ibm-plex-mono';
import '@fontsource/permanent-marker';

import { Tooltips } from 'astro-tooltips';

import Header from './components/Header.astro';
import Footer from './components/Footer.astro';
import FloatingIcons from '~/layouts/components/FloatingIcons.astro';
import { FloatingMobileMenu } from './components/jsx';

import '~/styles/main.scss';

import site from '../../site.json';

export interface Props {
	title?: string;
}

const pathname = new URL(Astro.request.url).pathname;

const { title: defaultTitle, description } = site;
const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="apple-touch-icon" sizes="180x180" href="/favicon/apple-touch-icon.png" />
		<link rel="icon" type="image/png" sizes="32x32" href="/favicon/favicon-32x32.png" />
		<link rel="icon" type="image/png" sizes="16x16" href="/favicon/favicon-16x16.png" />
		<link rel="manifest" href="/favicon/site.webmanifest" />
		<meta name="generator" content={Astro.generator} />
		<title>{title ?? defaultTitle}</title>

		<Tooltips interactive={false} delay={[15, 10]} />

		<style lang="scss">
			@use 'src/styles/utils';
			.container {
				display: flex;
				flex-direction: column;
				min-height: 100vh;
			}

			main {
				@include utils.center-horizontally;

				flex-grow: 1;
				margin-top: var(--size-9);
			}
		</style>

		<script is:inline>
			const storageKey = 'theme-preference';

			const getColorPreference = () => {
				if (localStorage.getItem(storageKey)) {
					return localStorage.getItem(storageKey);
				} else if (window.matchMedia('prefers-color-scheme: dark').matches) {
					return 'night-owl';
				} else {
					return 'night';
				}
			};

			const setColorPreference = () => {
				localStorage.setItem(storageKey, getColorPreference());
				reflectPreference();
			};

			const reflectPreference = () => {
				document.firstElementChild.setAttribute('data-theme', getColorPreference());
			};

			reflectPreference();
			window.onload = () => {
				reflectPreference();
				setColorPreference();
			};
		</script>
	</head>

	<body>
		<div class="container">
			<Header />
			<FloatingMobileMenu client:media="(max-width: 768px)" currentPath={pathname} />
			<main>
				<!-- This slot is the entry point of the application -->
				<slot />
			</main>
			<FloatingIcons />
			<Footer />
		</div>
	</body>
</html>
