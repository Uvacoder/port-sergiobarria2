---
import '@fontsource/lato';
import '@fontsource/ibm-plex-mono';
import '@fontsource/permanent-marker';

import { Tooltips } from 'astro-tooltips';

import Header from './components/Header.astro';
import Footer from './components/Footer.astro';
import { FloatingMobileMenu } from './components/jsx';

import '~/styles/main.scss';

import site from '../../site.json';

export interface Props {
	title?: string;
}

const pathname = new URL(Astro.request.url).pathname;

const { title: defaultTitle, description } = site;
const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="apple-touch-icon" sizes="180x180" href="/favicon/apple-touch-icon.png" />
		<link rel="icon" type="image/png" sizes="32x32" href="/favicon/favicon-32x32.png" />
		<link rel="icon" type="image/png" sizes="16x16" href="/favicon/favicon-16x16.png" />
		<link rel="manifest" href="/favicon/site.webmanifest" />
		<meta name="generator" content={Astro.generator} />
		<meta name="generator" content={Astro.generator} />
		<title>{title ?? defaultTitle}</title>

		<Tooltips interactive={false} delay={[15, 10]} />

		<style lang="scss">
			.container {
				display: flex;
				flex-direction: column;
				min-height: 100vh;
			}

			main {
				flex-grow: 1;
				margin-top: var(--size-9);
			}
		</style>
	</head>

	<body>
		<div class="container">
			<Header />
			<!-- <FloatingMobileMenu client:visible currentPath={pathname} /> -->
			<main>
				<!-- <button id="theme-switcher">Toggle Purple</button>
					<button id="theme-switcher-2">Toggle Light</button> -->
				<!-- This slot is the entry point of the application -->
				Content
				<!-- <slot /> -->
			</main>

			<!-- <script is:inline>
					const themeSwitcherPurple = document.querySelector('#theme-switcher');
					const themeSwitcherLight = document.querySelector('#theme-switcher-2');
					const doc = document.firstElementChild;
					
					themeSwitcherPurple.addEventListener('click', () => setTheme('purple'));
					themeSwitcherLight.addEventListener('click', () => setTheme('light'));
					
					const setTheme = (theme) => doc.setAttribute('color-scheme', theme);
				</script> -->
			<Footer />
		</div>
	</body>
</html>
